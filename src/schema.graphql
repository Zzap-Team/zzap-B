scalar Date # need to implement custom scalar
scalar JWT # need to implement custom scalar
type User {
  userId: ID!
  email: String!
  name: String!
  createdAt: Date!
  deletedAt: Date
  articles: [Article]!
}

type Article {
  articleId: ID!
  author: User!
  title: String!
  content: String!
  description: String
  createdAt: Date!
  modifiedAt: Date!
}

type Query {
  me: User!
  article(articleId: ID!): Article!
}

type Mutation {
  deleteMe: Boolean! # Need AccessToken
  updateMe(input: UserInput): User! # Need AccessToken
  addArticle(input: ArticleInput): Article! # Need AccessToken
  deleteArticle(articleId: ID!): Boolean! # Need AccessToken
  updateArticle(articleId: ID!, input: ArticleInput): Article! # Need AccessToken
  """
  login endpoint will return access token and refresh token in cookie.
  """
  loginWithThirdParty(input: LoginWithThirdPartyInput): LoginResult!
  loginWithPassword(input: LoginWithPasswordInput): LoginResult!
  refreshAccessToken: JWT!
}

type LoginResult {
  user: User!
  accessToken: JWT!
}

input UserInput {
  name: String!
  email: String!
  password: String
}

input LoginWithPasswordInput {
  email: String!
  password: String!
}

input LoginWithThirdPartyInput {
  vendor: String!
  authCode: String!
}

input ArticleInput {
  title: String
  content: String
  description: String
}
